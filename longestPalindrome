class Solution {
    public int longestPalindrome(String s) {

       boolean hasOdd=false;
        int poliLen=0;
        
                Map<Character, Integer> sMap = new HashMap<Character, Integer>();
        
            for(int i=0;i<s.length();i++){

                 if (!sMap.containsKey(s.charAt(i))) {  // first time we've seen this string
      sMap.put(s.charAt(i), 1);
    }
    else {
      int count = sMap.get(s.charAt(i));
      sMap.put(s.charAt(i), count + 1);}
                }
                

   
            for(char ch:sMap.keySet()){ 

            if(sMap.get(ch)%2==0){

               poliLen=poliLen+sMap.get(ch);
                
            }

            if(sMap.get(ch)%2==1){

            hasOdd=true;
            poliLen=poliLen+(sMap.get(ch)-1);
            }

            }   

        if(hasOdd){

            return poliLen+1;
        }

    return poliLen;
        
    }
    }
Longest Palindrome - LeetCode
